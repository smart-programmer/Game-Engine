#version 400 core

in vec3 positions;
in vec2 textureCoords;
in vec3 normals;

out vec2 pass_textureCoords;
out vec3 surface_normals;
out vec3 to_light_vector;
out vec3 diffused;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main(void){

	gl_Position = projectionMatrix * viewMatrix * transformationMatrix * vec4(positions, 1.0);
	pass_textureCoords = textureCoords;

	surface_normals = (transformationMatrix * vec4(normals, 0.0)).xyz;

	to_light_vector = lightPosition - (transformationMatrix * vec4(positions, 1.0)).xyz;

}